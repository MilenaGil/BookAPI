// <auto-generated />
using BookAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookAPI.Migrations
{
    [DbContext(typeof(BookInfoContext))]
    [Migration("20220906111829_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("BookAPI.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "ksiazka nr 1",
                            Title = "tytul1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "ksiazka nr 2",
                            Title = "tytul2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "ksiazka nr 3",
                            Title = "tytul3"
                        });
                });

            modelBuilder.Entity("BookAPI.Entities.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Heroes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            Description = "bohater nr 1",
                            Name = "postac1"
                        },
                        new
                        {
                            Id = 2,
                            BookId = 1,
                            Description = "bohater nr 2",
                            Name = "postac2"
                        },
                        new
                        {
                            Id = 3,
                            BookId = 2,
                            Description = "bohater nr 3",
                            Name = "postac3"
                        });
                });

            modelBuilder.Entity("BookAPI.Entities.Hero", b =>
                {
                    b.HasOne("BookAPI.Entities.Book", "Book")
                        .WithMany("Heroes")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("BookAPI.Entities.Book", b =>
                {
                    b.Navigation("Heroes");
                });
#pragma warning restore 612, 618
        }
    }
}
